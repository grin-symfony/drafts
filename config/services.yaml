imports:
    #-   resource: 'default/services.yaml'
    #    ignore_errors: false

# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
when@dev:
    parameters:
        #app.app: "_1"

parameters:

    app.app: "_0" #@
    #app.sign: '='
    #app.app: '%env(key_val:explode:app.sign:default::key:query:url:APP_APP)%'

    ###> REGEXP ###
    app.regexp.digit:   '[0-9]'
    ###< REGEXP ###
    
    ###> SESSION ###
    app.session.max_idle_sec:   '10'
    ###< SESSION ###
    
    ###> Fixture ###
    app.fixture.users:      15
    app.fixture.product.toy:   5
    app.fixture.product.food:   5
    app.fixture.product.furniture:   5
    ###< Fixture ###

    ###> GS\Service ###
    ###< GS\Service ###

    ###> GS\WebApp ###
    ###< GS\WebApp ###

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
    
        bind:
            ###> SERVICES ###
            $t:                 '@Symfony\Contracts\Translation\TranslatorInterface'
            $ru12Carbon:        '@app.ru_12_carbon'
            $enUtcCarbon:       '@app.en_utc_carbon'
            ###< SERVICES ###
            
            ###> gs_service ###
            $faker:             '@gs_service.faker'
            ###< gs_service ###
            
            ###> PARAMS ###
            $adminEmail:        '%env(APP_ADMIN_EMAIL)%'
            $kernelProjectDir:  '%kernel.project_dir%'
            ###< PARAMS ###
            
            ###> MESSENGER ###
            $adminSendEmailMessage: '@app.messenger.notifier.admin_send_email'
            $get: '@gs_web_app.messenger.query'
            ###< MESSENGER ###
            
    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Service/Anonymous'
            - '../src/Entity/'
            - '../src/Kernel.php'
    
    # like _instanceof only by path
    app.messenger.command_message_handlers:
        namespace: App\Messenger\Command\Handler\
        resource: '../src/Messenger/Command/Handler/'
        tags:
        -   name: 'messenger.message_handler'
            bus: 'command.bus'
            
    app.messenger.event_message_handlers:
        namespace: App\Messenger\Event\Handler\
        resource: '../src/Messenger/Event/Handler/'
        tags:
        -   name: 'messenger.message_handler'
            bus: 'event.bus'
            
    app.dto:
        namespace: 'App\Dto\'
        resource: '../src/Dto/'
        tags:
        -   name: 'app.dto'
            
    app.dto.null_user_dto:
        class: App\Dto\User\NullUserDto
        tags:
        -   name: 'app.dto'
    App\Dto\User\NullUserDto: '@app.dto.null_user_dto'
            
    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones


    ###> ROUTER ###
    App\Service\Router\AttributeRouterReader:
        class: App\Service\Router\AttributeRouterReader
        tags:
        -   routing.loader
    ###< ROUTER ###
    
    
    _instanceof:
        
        ###> MESSENGER ###
        App\Contract\Messenger\CommandBusHandlerInterface:
            tags:
            -   name:   'messenger.message_handler'
                bus:    'command.bus'

        App\Contract\Messenger\EventBusHandlerInterface:
            tags:
            -   name:   'messenger.message_handler'
                bus:    'event.bus'
        ###< MESSENGER ###
        
        
            
    ###> VALUE RESOLVER ###
    ###< VALUE RESOLVER ###
    
    ###> SERVICES ###
    
    app.ru_12_carbon:
        parent: gs_service.carbon_factory_immutable
        arguments:
            $settings:
                locale: ru
                timezone: '+1200'
    
    app.en_utc_carbon:
        parent: gs_service.carbon_factory_immutable
        arguments:
            $settings:
                locale: en_US
                timezone: '+0000'
    
    app.messenger.notifier.admin_send_email:
        class: App\Messenger\Notifier\ToAdminSendEmail
        shared: false
        arguments:
            $toEmail: '%env(APP_ADMIN_EMAIL)%'
    
    app.messenger.middleware.add_handler_argument_from:
        abstract: true
        class: App\Messenger\Middleware\AddHandlerArgumentFrom
        
    #app.interface_adapter:
    #    class: App\Contract\SomeInterface
    #    from_callable: ['@App\Service\StringService', 'getPath']

    ###> ALIASES ###
    
    # NEW DEFINITION
    #app.stringservice:
    #    class: App\Service\StringService

    # SERVICE_ID becomes ALIAS (NEW DEFINITION)
    #App\Service\StringService: '@app.stringservice'
    #app_stringservice: '@App\Service\StringService'
    
    #App\Service\StringService $secondSecond: '@app.string2'
    App\Service\SomeService:
        class: App\Service\SomeService
        
    ###< ALIASES ###
    
    #App\Email\AbstractEmail:
    #    abstract: true
    #    class: App\Email\AbstractEmail
    #    configurator: '@App\Configurator\EmailConfigurator'
    
    app.email_namespace:
        namespace: App\Email\Style\
        resource: '../src/Email/Style/'
        configurator: '@App\Configurator\EmailConfigurator'
    
    #App\Email\DefaultEmail:
    #    class: App\Email\DefaultEmail
    #    parent: App\Email\AbstractEmail
    
    #App\Email\CongratulationEmail:
    #    class: App\Email\CongratulationEmail
    #    parent: App\Email\AbstractEmail
    
    ###< SERVICES ###
    
    
    ###> TAGS ###
    App\DataFixtures\UserFixtures:
        class: App\DataFixtures\UserFixtures
        tags:
        -   name: doctrine.fixture.orm
            group: user
    ###< TAGS ###
    
    
    ###< DOCTRINE ###
    
    App\Service\Doctrine\PurgerTruncateFactory:
        class:  App\Service\Doctrine\PurgerTruncateFactory
        tags:
        -   name:   'doctrine.fixtures.purger_factory'
            alias:  't'
    
    ###> DOCTRINE ###